{"version":3,"sources":["../../../src/web.ts"],"names":["GeolocationWeb","options","a","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","err","enableHighAccuracy","timeout","maximumAge","callback","id","watchPosition","window","clearWatch","parseInt","permissions","this","unavailable","query","name","permission","location","state","coarseLocation","unimplemented","Geolocation"],"mappings":"4QAWaA,EAAb,+MACE,WAAyBC,GAAzB,SAAAC,EAAA,+EACS,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,oBACpB,SAAAC,GACEL,EAAQK,MAEV,SAAAC,GACEL,EAAOK,KACR,eAECC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,GACTZ,QAbX,2CADF,yHAoBE,WACEA,EACAa,GAFF,eAAAZ,EAAA,6DAIQa,EAAKT,UAAUC,YAAYS,eAC/B,SAAAP,GACEK,EAASL,MAEX,SAAAC,GACEI,EAAS,KAAMJ,KAChB,eAECC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,GACTZ,IAfT,4BAmBYc,IAnBZ,2CApBF,wHA0CE,WAAiBd,GAAjB,SAAAC,EAAA,sDACEe,OAAOX,UAAUC,YAAYW,WAAWC,SAASlB,EAAQc,GAAI,KAD/D,2CA1CF,4HA8CE,4BAAAb,EAAA,yDAC2B,qBAAdI,WAA8BA,UAAUc,YADrD,sBAEUC,KAAKC,YAAY,iDAF3B,uBAK2BL,OAAOX,UAAUc,YAAYG,MAAM,CAC1DC,KAAM,gBANV,cAKQC,EALR,yBAQS,CAAEC,SAAUD,EAAWE,MAAOC,eAAgBH,EAAWE,QARlE,gDA9CF,6HAyDE,sBAAAzB,EAAA,4DACQmB,KAAKQ,cAAc,2BAD3B,gDAzDF,2D,MAAoC,GA8D9BC,EAAc,IAAI9B","file":"static/js/72.da2618eb.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  CallbackID,\n  GeolocationPlugin,\n  PermissionStatus,\n  Position,\n  PositionOptions,\n  WatchPositionCallback,\n} from './definitions';\n\nexport class GeolocationWeb extends WebPlugin implements GeolocationPlugin {\n  async getCurrentPosition(options?: PositionOptions): Promise<Position> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        pos => {\n          resolve(pos);\n        },\n        err => {\n          reject(err);\n        },\n        {\n          enableHighAccuracy: false,\n          timeout: 10000,\n          maximumAge: 0,\n          ...options,\n        },\n      );\n    });\n  }\n\n  async watchPosition(\n    options: PositionOptions,\n    callback: WatchPositionCallback,\n  ): Promise<CallbackID> {\n    const id = navigator.geolocation.watchPosition(\n      pos => {\n        callback(pos);\n      },\n      err => {\n        callback(null, err);\n      },\n      {\n        enableHighAccuracy: false,\n        timeout: 10000,\n        maximumAge: 0,\n        ...options,\n      },\n    );\n\n    return `${id}`;\n  }\n\n  async clearWatch(options: { id: string }): Promise<void> {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    const permission = await window.navigator.permissions.query({\n      name: 'geolocation',\n    });\n    return { location: permission.state, coarseLocation: permission.state };\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n\nconst Geolocation = new GeolocationWeb();\n\nexport { Geolocation };\n"],"sourceRoot":""}